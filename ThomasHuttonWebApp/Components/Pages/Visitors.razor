@page "/visitors"
@rendermode InteractiveServer
@using Classes
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Db


<PageTitle>Visitor's Center</PageTitle>

<h1>Visitor's Center</h1>

<p class="lead">Please enter your first name and the company you represent. Your data will be sent to a SQL database and displayed below. </p>

<EditForm Model="@newPerson" OnValidSubmit="@AddContact">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="newPerson.Name" placeholder="First Name" class="form-control mb-2" />
    <InputText @bind-Value="newPerson.Company" placeholder="Company" class="form-control mb-2" />
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<hr />
<h4>Saved Contacts</h4>
@if (isLoading)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <table class= "table table-sm">
        <thead class="table-dark">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Company</th>
                <th scope="col">Date Signed</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var person in contacts)
            {
                <tr class="table-hover">
                    <td>@person.Name</td>
                    <td>@person.Company</td>
                    <td>@person.Datesigned</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Person newPerson = new();
    private List<Person> contacts = new();
    private bool isLoading;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = true;
            StateHasChanged();
            contacts = await Db.Contacts.ToListAsync();
            isLoading = false;
            StateHasChanged(); // trigger re-render after load
        }
    }

    private async Task AddContact()
    {
        newPerson.Datesigned = DateTime.Now;
        Db.Contacts.Add(newPerson);
        await Db.SaveChangesAsync();
        contacts = await Db.Contacts.ToListAsync();
        newPerson = new Person(); // Reset form
    }
}
